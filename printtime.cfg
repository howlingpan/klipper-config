#####################################################################
# 	Macro
#####################################################################
## This macro stores the variables
## must be added to PRINT_END - CANCEL_PRINT Macro 
## works only with the use of virtual sd card!
[gcode_macro _ADD_PRINT_TIME]
description: Helper: Store print time values in variables
gcode:
  ##### get values of current print #####
  {% set currenttime = printer.print_stats.total_duration %}
  {% set currentprint = printer.print_stats.filament_used|float %}
  ##### get saved dictornary or initiate if not exist #####
  {% if not printer.save_variables.variables.print_stats %}
    {% set print_stats = {'time': {'total': currenttime, 'service': currenttime, 'filter': currenttime}, 'filament': currentprint}%}
  {% else %}
    {% set print_stats = printer.save_variables.variables.print_stats %}
    {% set _dummy = print_stats.time.update({'total':(print_stats.time.total + currenttime)|int}) %}
    {% set _dummy = print_stats.time.update({'service':(print_stats.time.service + currenttime)|int}) %}
    {% set _dummy = print_stats.time.update({'filter':(print_stats.time.filter + currenttime)|int}) %}
    {% set _dummy = print_stats.update({'filament':(print_stats.filament + currentprint)|float}) %}    
  {% endif %}  
  ##### Save new values #####
  SAVE_VARIABLE VARIABLE=print_stats VALUE="{print_stats}"
  _DISPLAY_PRINT_TIME PREFIX=Took SECONDS={currenttime}

[gcode_macro _DISPLAY_PRINT_TIME]
description: Helper: Print actual stored print time
gcode:
  {% set totaltime = params.SECONDS|int if 'SECONDS' in params|upper  
                else printer.save_variables.variables.print_stats.time.total %}
  {% set prefix = params.PREFIX|default('Total') %}
  {% set h,m,s = (totaltime / 3600)|int, ((totaltime / 60) % 60)|int, (totaltime % 60)|int %}
  {action_respond_info("Print time %s %d:%02d:%02d" % (prefix,h,m,s))}
  M117 {prefix} {h}:{'%02d' % m}:{'%02d' % s}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10

## used at PRINT_END and CANCEL_PRINT
[gcode_macro _SD_PRINT_STATS]
description: Helper: Print statistic of last print
gcode:
  {% set PT = printer.print_stats.print_duration %}
  {% set Ph,Pm,Ps = (PT / 3600)|int, ((PT / 60) % 60)|int, (PT % 60)|int %}
  {% set TT = printer.print_stats.total_duration %}
  {% set Th,Tm,Ts = (TT / 3600)|int, ((TT / 60) % 60)|int, (TT % 60)|int %}
  {% set Fil = printer.print_stats.filament_used|float / 1000.0 %}
  {action_respond_info("Statistic of last Print (%s):
                        Name: %s
                        Filament: %.4fm
                        Print Time: %d:%02d:%02d
                        Total Time: %d:%02d:%02d" %
  (params.R, printer.print_stats.filename, Fil, Ph, Pm, Ps, Th, Tm, Ts))}

 ## used at PRINT_END and CANCEL_PRINT
[gcode_macro _SD_PRINTER_STATS]
description: Helper: Print statistic of printer
gcode:
  {% set ST = printer.save_variables.variables.print_stats.time.service %}
  {% set Sh,Sm,Ss = (ST / 3600)|int, ((ST / 60) % 60)|int, (ST % 60)|int %}
  {% set TT = printer.save_variables.variables.print_stats.time.total %}
  {% set Th,Tm,Ts = (TT / 3600)|int, ((TT / 60) % 60)|int, (TT % 60)|int %}
  {% set FT = printer.save_variables.variables.print_stats.time.filter %}
  {% set Fh,Fm,Fs = (FT / 3600)|int, ((FT / 60) % 60)|int, (FT % 60)|int %}
  {% set Fil = printer.save_variables.variables.print_stats.filament|float / 1000.0 %}
  {action_respond_info("Printer Statistics:
                        Total Print Time: %d:%02d:%02d
                        Total Filament used: %.4fm
                        Filter use time: %d:%02d:%02d
                        Time since last Service: %d:%02d:%02d" %
  (Th, Tm, Ts, Fil, Fh, Fm, Fs, Sh, Sm, Ss))}
  _CHECK_FILTER

[gcode_macro _CHECK_FILTER]
description: Helper: Print filter exchange warning
gcode:
  {% if printer['gcode_macro _USER_VARIABLE'].hw_ena.filter|lower== 'true' %}
    {% set Fh = (printer.save_variables.variables.print_stats.time.filter / 3600)|int %}
    {% if Fh >= printer['gcode_macro _USER_VARIABLE'].peripheral.filter.warning %}
      M117 Change Filter!
      {action_respond_info("Change Filter material at Micro!")}
      UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
    {% endif %}
  {% endif %}  
  
[gcode_macro RST_FILTER]
description: Reset Nevermore interval time
gcode:
  {% set print_stats = printer.save_variables.variables.print_stats %}
  {% set _dummy = print_stats.time.update({'filter': 0}) %}
  SAVE_VARIABLE VARIABLE=print_stats VALUE="{print_stats}"
  {action_respond_info("Flter used time reseted to zero")}
  
[gcode_macro RST_SERVICE]
description: Reset Service interval time
gcode:
  {% set print_stats = printer.save_variables.variables.print_stats %}
  {% set _dummy = print_stats.time.update({'service': 0}) %}
  SAVE_VARIABLE VARIABLE=print_stats VALUE="{print_stats}"
  {action_respond_info("Time since last service reseted to zero")}
  
###########################################################################
#  Display Menu                                                           #
#  !!! Caution: Remove all below if you do not have a display defined !!! #
###########################################################################
[menu __main __statistic]
type: list
enable: {not printer.idle_timeout.state == "Printing" and 'printer.save_variables.variables.print_stats' in printer}
name: Satistic

[menu __main __statistic __totaltime]
type: command
enable: True
name: Time of Operation
gcode:
  {menu.exit()}
  _DISPLAY_PRINT_TIME PREFIX=Total SECONDS={printer.save_variables.variables.print_stats.time.total}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
  UPDATE_DELAYED_GCODE ID=_DELAY_DISPLAY_OFF DURATION=10
  
[menu __main __statistic __filament]
type: command
enable: True
name: Total Filament used
gcode:
  {menu.exit()}
  M117 Filerment {'%.4f' % (printer.save_variables.variables.print_stats.filament|float / 1000.0)}m
  {action_respond_info("Total Filament printed: %.4fm" % (printer.save_variables.variables.print_stats.filament|float / 1000.0))}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
  UPDATE_DELAYED_GCODE ID=_DELAY_DISPLAY_OFF DURATION=10

[menu __main __statistic __filtertime]
type: command
enable: True
name: Time since Filter change
gcode:
  {menu.exit()}
  _DISPLAY_PRINT_TIME PREFIX=Filter SECONDS={printer.save_variables.variables.print_stats.time.filter}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
  UPDATE_DELAYED_GCODE ID=_DELAY_DISPLAY_OFF DURATION=10

[menu __main __statistic __servicetime]
type: command
enable: True
name: Time since Service
gcode:
  {menu.exit()}
  _DISPLAY_PRINT_TIME PREFIX=Service SECONDS={printer.save_variables.variables.print_stats.time.service}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
  UPDATE_DELAYED_GCODE ID=_DELAY_DISPLAY_OFF DURATION=10
  
  
[menu __main __statistic __rst_filter]
type: command
enable: True
name: Reset Filter time
gcode:
  {menu.exit()}
  RST_FILTER
  UPDATE_DELAYED_GCODE ID=_DELAY_DISPLAY_OFF DURATION=10

    
[menu __main __statistic __rst_service]
type: command
enable: True
name: Reset Service time
gcode:
  {menu.exit()}
  RST_SERVICE
  UPDATE_DELAYED_GCODE ID=_DELAY_DISPLAY_OFF DURATION=10

    