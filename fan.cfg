#####################################################################
#  Fan Control
#####################################################################
##  Hotend Fan - XYE board, E1 Connector
[heater_fan hotend_fan]
pin: PB0
max_power: 1.0
fan_speed: 1
kick_start_time: 0
heater: extruder
heater_temp: 50.0

##  Print Cooling Fan (24V Fan 4 wire)
##  Z board, X Endstop (PWM)
##  Z board, E1det (Tacho)
[fan]
pin: PB1
# cycle_time: 0.0001     #10 kHz PWM signal
# hardware_pwm: False
# kick_start_time: 0
# off_below: 0.05
# tachometer_pin: z:P1.25
# tachometer_ppr: 2

##  Controller fan (5V Fan 4 wire)
##  Z board, NeoPixel Connector (PWM)
##  Z board, Y Endstop (Tacho)
# [heater_fan controller_fan]
# pin: z:P1.24
# max_power: 1.0
# shutdown_speed: 1.0
# cycle_time: 0.0001     #10 kHz PWM signal
# hardware_pwm: False
# kick_start_time: 0
# fan_speed: 0.9
# heater: heater_bed
# heater_temp: 45.0
# tachometer_pin: z:P1.28
# tachometer_ppr: 2

##  Chamber temp / Exhaust fan (24V Fan 4 wire)
##  XYE board, NeoPixel Connector (PWM)
##  XYE board, TH1 Connector
##  XYE board, Z Endstop (Tacho)
# [temperature_fan chamber]
# pin: P1.24
# max_power: 1.0
# shutdown_speed: 0.0
# cycle_time: 0.0005     #2 kHz PWM signal
# hardware_pwm: False
# kick_start_time: 0
# sensor_type: ATC Semitec 104GT-2
# sensor_pin: P0.23
# min_temp: 0
# max_temp: 70
# target_temp: 0
# max_speed: 0.7
# min_speed: 0.1
# control: pid
# pid_Kp: 2.0     ;40
# pid_Ki: 5.0     ;0.2
# pid_Kd: 0.5     ;0.1
# pid_deriv_time: 2.0
# gcode_id: C
# tachometer_pin: P1.27
# tachometer_ppr: 2

##  Nevermore Micro filter
##  - Z board, E1 Connector
[fan_generic filter]
pin: PB2
max_power: 1.0
kick_start_time: 0.5
off_below: 0.10

[thermistor chamber_temp]
temperature1: 25
resistance1: 10000
beta: 3950

[temperature_sensor chamber]
sensor_type: chamber_temp
# sensor_type: Generic 3950
sensor_pin: PC1
min_temp: 0
max_temp: 100
gcode_id: C

[temperature_sensor zero2]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
gcode_id: PI

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

##  Z board, TH1 Connector
# [temperature_sensor endstop]
# sensor_type: Generic 3950
# sensor_pin: z:P0.23
# min_temp: 10
# max_temp: 100
# gcode_id: E

## dummy output to get an switch in Mainsail
## any unused mcu pin can be defined you will not connect anything
## as I use the rPi as mcu I will use a pin from it
## Off -> M106 will update fan
## On -> M106 can not uodate fan
[output_pin lock_M106]
pin: rpi: gpio16
value:0

#####################################################################
#  Macros
#####################################################################
# M106 with lock and manual set feature
# M106 S128 M1 will update the fan in any case
[gcode_macro M106]
description: set fan with manual override and lock option
rename_existing: M106.1
gcode:
  {% if printer['output_pin lock_M106'].value|int == 0 or params.M|default(0) == '1' %}
    M106.1 {rawparams}
  {% else %}
    {action_respond_info("M106 update is locked")}
  {% endif %}
  
[gcode_macro M141]
description: Set temperature of chamber fan
gcode: SET_TEMPERATURE_FAN_TARGET temperature_fan=chamber target={params.S|default(0)}
    
[gcode_macro _SET_FILTER]
description: Helper: Set Nevermore filter speed
gcode: SET_FAN_SPEED FAN=filter SPEED={params.S|default(0)}

[gcode_macro _FILTER_ON]
description: Helper: Nevermore on
gcode: _SET_FILTER S={printer['gcode_macro _USER_VARIABLE'].peripheral.filter.on_val}
  
[gcode_macro FILTER]
description: Toggle Nevermore fan
gcode:
  {% if printer['fan_generic filter'].speed|float > 0.0 %} _SET_FILTER {% else %} _FILTER_ON {% endif %}
  _FILTER_INFO

[delayed_gcode _DELAY_FILTER_OFF]
gcode:
  {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
    _SET_FILTER
    _FILTER_INFO
  {% endif %}

##  Chamber Ventilation Control in Mainsail
[gcode_macro VENT]
description: Toggle Chamber fan
gcode:
    {% if printer['temperature_fan chamber'].target|float > 0 and 
          printer['temperature_fan chamber'].target|float <= printer['gcode_macro _USER_VARIABLE'].peripheral.vent.on_val|float %}
        M141
    {% else %}
        M141 S{printer['gcode_macro _USER_VARIABLE'].peripheral.vent.on_val}
    {% endif %}
    _VENT_INFO

[delayed_gcode _DELAY_VENT_OFF]
gcode:
  {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
    M141
    _VENT_INFO
  {% endif %}

[gcode_macro _VENT_INFO]
description: Helper: Print chamber fan temperature
gcode:
  {% set txt = "off" if printer['temperature_fan chamber'].target == 0 
          else "target temp: %2dC" % printer['temperature_fan chamber'].target %}
  {action_respond_info("Chamber fan %s" % txt)}
    
[gcode_macro _FILTER_INFO]
description: Helper: Print Nevermore speed
gcode: {action_respond_info("Filter fan %s" % 'on' if printer['fan_generic filter'].speed|float > 0.0 else 'off')}
